{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "503fb9ed227005f6dc9797e813ba60aa9ebe43ad65e2adb604a802192f9797c6",
          "withoutMetadata": "bcb30cb11c5378e371f36ad9a9fb5bd9aa457446f7b0720d6c8dcc9bed7475fa",
          "linkedWithoutMetadata": "bcb30cb11c5378e371f36ad9a9fb5bd9aa457446f7b0720d6c8dcc9bed7475fa"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForCoral(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountOutWithFees(uint256,address[])",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()",
          "isNativeCoral(address)",
          "hasTokenBalance(address,uint256)",
          "()",
          "swapCoralForCreatorToken(address,uint256,uint256,uint256)",
          "getNativeCoralBalance()",
          "canHandleNativeCoral()",
          "getWithdrawableFees(address)",
          "checkFeesForRedeployment(address)",
          "isValidSwapAmount(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:82"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "coralToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)4852",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)4852": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "a4e1bf97794cd5b652b1d11fa1e131d2a75f8661811859c1730cd0513f8abed6",
          "withoutMetadata": "8ecb7a745af1cff45faea94eba45354b3fe7d450cb435f1af8a4e4a454ee475f",
          "linkedWithoutMetadata": "8ecb7a745af1cff45faea94eba45354b3fe7d450cb435f1af8a4e4a454ee475f"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "isNativeCoral(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "hasMinimumLiquidity(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "isValidLiquidity(uint256)",
          "()",
          "()",
          "transferCoralToDEX(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:160"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "coralReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "coralToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)2624_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)2659_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)2760_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:118"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:138"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(PoolNeedInfo)2807_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:150"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)2624_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)2760_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)2659_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)2624_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)2760_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)2807_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)2659_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "b874097123de0f021dd53e7486f5604f2f6caab5d9a1e073de92d428cfb6d00a",
          "withoutMetadata": "2acf47ccbbcb905bc89d42c3d283a8e880015bdb347bacd4f9377e97f121748e",
          "linkedWithoutMetadata": "2acf47ccbbcb905bc89d42c3d283a8e880015bdb347bacd4f9377e97f121748e"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "swapCoralForToken(address,uint256,uint256)",
          "isNativeCoral(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "coralToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)4852",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(SaraDEX)2582",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ICreatorCoin)4885",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:24"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "5",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:25"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:30"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:42"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)4885": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)2582": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)4852": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "8a2efd7393d274f22f67a9c08567b4378804a5323cc507ed58099cc9d02d0edf",
          "withoutMetadata": "bcb30cb11c5378e371f36ad9a9fb5bd9aa457446f7b0720d6c8dcc9bed7475fa",
          "linkedWithoutMetadata": "bcb30cb11c5378e371f36ad9a9fb5bd9aa457446f7b0720d6c8dcc9bed7475fa"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForCoral(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountOutWithFees(uint256,address[])",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()",
          "isNativeCoral(address)",
          "hasTokenBalance(address,uint256)",
          "()",
          "swapCoralForCreatorToken(address,uint256,uint256,uint256)",
          "getNativeCoralBalance()",
          "canHandleNativeCoral()",
          "getWithdrawableFees(address)",
          "checkFeesForRedeployment(address)",
          "isValidSwapAmount(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:82"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "coralToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)4898",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)4898": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "aacc6c7161312a3a0faf9463e1954208ee27aecb2b1102025389232ed9e65a93",
          "withoutMetadata": "481b18471500ca86385df97a08510522fed19ccfa72c32a8b017653749c33ed5",
          "linkedWithoutMetadata": "481b18471500ca86385df97a08510522fed19ccfa72c32a8b017653749c33ed5"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "isNativeCoral(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "hasMinimumLiquidity(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "isValidLiquidity(uint256)",
          "()",
          "()",
          "transferCoralToDEX(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:160"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "coralReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "coralToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)2624_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)2659_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)2760_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:118"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:138"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(PoolNeedInfo)2807_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:150"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)2624_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)2760_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)2659_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)2624_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)2760_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)2807_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)2659_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "88b60e104fb2ab0c4f7a275c4c5ced1e96a8e93ec6b2c6b2ffa9419e8ee7b289",
          "withoutMetadata": "2acf47ccbbcb905bc89d42c3d283a8e880015bdb347bacd4f9377e97f121748e",
          "linkedWithoutMetadata": "2acf47ccbbcb905bc89d42c3d283a8e880015bdb347bacd4f9377e97f121748e"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "swapCoralForToken(address,uint256,uint256)",
          "isNativeCoral(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "coralToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)4898",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(SaraDEX)2582",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ICreatorCoin)4931",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:24"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "5",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:25"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:30"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:42"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)4931": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)2582": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)4898": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "55477cafbabcbc18c8d3f69ec9094d286fb0b6debbb9d02762094febc70de251",
          "withoutMetadata": "bcb30cb11c5378e371f36ad9a9fb5bd9aa457446f7b0720d6c8dcc9bed7475fa",
          "linkedWithoutMetadata": "bcb30cb11c5378e371f36ad9a9fb5bd9aa457446f7b0720d6c8dcc9bed7475fa"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForCoral(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountOutWithFees(uint256,address[])",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()",
          "isNativeCoral(address)",
          "hasTokenBalance(address,uint256)",
          "()",
          "swapCoralForCreatorToken(address,uint256,uint256,uint256)",
          "getNativeCoralBalance()",
          "canHandleNativeCoral()",
          "getWithdrawableFees(address)",
          "checkFeesForRedeployment(address)",
          "isValidSwapAmount(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:82"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "coralToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)4869",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)4869": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "ffd846b0fb6cda80ff7960b24f488e6e992e7542b20d1e4cf2f42f6c558e4594",
          "withoutMetadata": "9c27310d209e094158414af7f6b23e6ace72c99363c9d7f5d5c75226c00611e8",
          "linkedWithoutMetadata": "9c27310d209e094158414af7f6b23e6ace72c99363c9d7f5d5c75226c00611e8"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "isNativeCoral(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "hasMinimumLiquidity(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "isValidLiquidity(uint256)",
          "()",
          "()",
          "transferCoralToDEX(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:160"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "coralReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "coralToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)2624_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)2659_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)2760_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:118"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:138"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(PoolNeedInfo)2807_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:150"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)2624_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)2760_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)2659_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)2624_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)2760_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)2807_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)2659_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "7c5283cc16086a66aab3c3fcbf713b6f8c8c3558b71a46e872c6eef4c42fa6fc",
          "withoutMetadata": "2acf47ccbbcb905bc89d42c3d283a8e880015bdb347bacd4f9377e97f121748e",
          "linkedWithoutMetadata": "2acf47ccbbcb905bc89d42c3d283a8e880015bdb347bacd4f9377e97f121748e"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "swapCoralForToken(address,uint256,uint256)",
          "isNativeCoral(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "coralToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)4869",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(SaraDEX)2582",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ICreatorCoin)4902",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:24"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "5",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:25"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:30"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:42"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)4902": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)2582": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)4869": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "7132896c41934bbdf8a6c4ee0890892bb7790bc1f6c4fcc0817f4a52cdf51845",
          "withoutMetadata": "bcb30cb11c5378e371f36ad9a9fb5bd9aa457446f7b0720d6c8dcc9bed7475fa",
          "linkedWithoutMetadata": "bcb30cb11c5378e371f36ad9a9fb5bd9aa457446f7b0720d6c8dcc9bed7475fa"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForCoral(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountOutWithFees(uint256,address[])",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()",
          "isNativeCoral(address)",
          "hasTokenBalance(address,uint256)",
          "()",
          "swapCoralForCreatorToken(address,uint256,uint256,uint256)",
          "getNativeCoralBalance()",
          "canHandleNativeCoral()",
          "getWithdrawableFees(address)",
          "checkFeesForRedeployment(address)",
          "isValidSwapAmount(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:82"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "coralToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)4869",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)4869": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "07b6b40dd1f99d7efc306d2230cd4e59fec00be1b28955b75710ef3b6a382d17",
          "withoutMetadata": "cfc2875daac9b3ad378ab91f97ac2cdbbce691f8649c5d54df051127ebe83c83",
          "linkedWithoutMetadata": "cfc2875daac9b3ad378ab91f97ac2cdbbce691f8649c5d54df051127ebe83c83"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "isNativeCoral(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "hasMinimumLiquidity(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "isValidLiquidity(uint256)",
          "()",
          "()",
          "transferCoralToDEX(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:160"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "coralReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "coralToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)2624_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)2659_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)2760_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:118"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:138"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(PoolNeedInfo)2807_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:150"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)2624_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)2760_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)2659_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)2624_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)2760_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)2807_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)2659_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "9869b69e289e15f45b547001847ba0a3cad834a223eb58c8f667cc7e88a41199",
          "withoutMetadata": "2acf47ccbbcb905bc89d42c3d283a8e880015bdb347bacd4f9377e97f121748e",
          "linkedWithoutMetadata": "2acf47ccbbcb905bc89d42c3d283a8e880015bdb347bacd4f9377e97f121748e"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "swapCoralForToken(address,uint256,uint256)",
          "isNativeCoral(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "coralToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)4869",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(SaraDEX)2582",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ICreatorCoin)4902",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:24"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "5",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:25"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:30"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:42"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)4902": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)2582": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)4869": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "42c82afc29ee7f0dc76b5bcb3ee09ee46b1c13da1a5757265af710fb2516ff32",
          "withoutMetadata": "1cf10468ac1041ecdf87046b5bb301d6123524d7c0f9953721586cd7da6c929b",
          "linkedWithoutMetadata": "1cf10468ac1041ecdf87046b5bb301d6123524d7c0f9953721586cd7da6c929b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()",
          "isNativeS(address)",
          "hasTokenBalance(address,uint256)",
          "()",
          "swapSForCreatorToken(address,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)4112",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)4112": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "233b2ee67e95116a7ca39a692cd7891c2fb0f98474e7d07d2653f63b71d64449",
          "withoutMetadata": "4c6819191dde12fe3d45764b05d6e69e7a5538a3ea68bac8857b3c0f6636b83d",
          "linkedWithoutMetadata": "4c6819191dde12fe3d45764b05d6e69e7a5538a3ea68bac8857b3c0f6636b83d"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "()",
          "()",
          "transferSToDEX(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)1982_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)2017_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)2116_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:117"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:135"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(PoolNeedInfo)2157_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:147"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)1982_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)2116_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)2017_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)1982_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)2116_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)2157_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)2017_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "676ef74d13c0e7a9dca51ffb8739d0de3abb30d26d3037bc651d16bdaba2e37a",
          "withoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042",
          "linkedWithoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address payable,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)1940",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)4145",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)4145": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)1940": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "0bbfedd00f43223471cb799599360ab20cc0a779eacb9444bee5c91be3bf6e69",
          "withoutMetadata": "f35046ae9823f14cc7004e86f0f9e770fb6d4b0e0ad7a55a3ae9b949b2daf8e7",
          "linkedWithoutMetadata": "f35046ae9823f14cc7004e86f0f9e770fb6d4b0e0ad7a55a3ae9b949b2daf8e7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:56"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)3694",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)3694": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "233b2ee67e95116a7ca39a692cd7891c2fb0f98474e7d07d2653f63b71d64449",
          "withoutMetadata": "4c6819191dde12fe3d45764b05d6e69e7a5538a3ea68bac8857b3c0f6636b83d",
          "linkedWithoutMetadata": "4c6819191dde12fe3d45764b05d6e69e7a5538a3ea68bac8857b3c0f6636b83d"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "()",
          "()",
          "transferSToDEX(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)1564_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)1599_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)1698_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:117"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:135"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(PoolNeedInfo)1739_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:147"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)1564_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)1698_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)1599_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)1564_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)1698_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)1739_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)1599_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "a605f9edc85205d12312f0d1e56ceedb8dbf16721bda48cc97f497ccfa7a9e8a",
          "withoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042",
          "linkedWithoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address payable,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)1522",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)3727",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)3727": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)1522": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "f12518435587a067f6e94eb0b011511ad0efc2e82c3879c116602071cab175fc",
          "withoutMetadata": "f35046ae9823f14cc7004e86f0f9e770fb6d4b0e0ad7a55a3ae9b949b2daf8e7",
          "linkedWithoutMetadata": "f35046ae9823f14cc7004e86f0f9e770fb6d4b0e0ad7a55a3ae9b949b2daf8e7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:56"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)3635",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)3635": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "90afb82d87e2d1a1dadf7cc7d4f126def5a2f8aa499d9e428f040445daec2296",
          "withoutMetadata": "4de3ad0d232eb54d2acbab7c62999436c9d8af4f68067382e220b50c1d8dbec8",
          "linkedWithoutMetadata": "4de3ad0d232eb54d2acbab7c62999436c9d8af4f68067382e220b50c1d8dbec8"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "()",
          "()",
          "transferSToDEX(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)1564_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)1599_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)1698_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:117"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:135"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(PoolNeedInfo)1739_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:147"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)1564_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)1698_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)1599_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)1564_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)1698_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)1739_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)1599_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "d692d71cae0d01cf7a295779d8054cb89e612d30c3fdc5a1a13a4c39b4442ef4",
          "withoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042",
          "linkedWithoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address payable,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)1522",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)3668",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)3668": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)1522": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "fb5ccc735a2f9553b2249d618062cb61b8aa792514e1e969fd1f038d65b99831",
          "withoutMetadata": "f35046ae9823f14cc7004e86f0f9e770fb6d4b0e0ad7a55a3ae9b949b2daf8e7",
          "linkedWithoutMetadata": "f35046ae9823f14cc7004e86f0f9e770fb6d4b0e0ad7a55a3ae9b949b2daf8e7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:56"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)3634",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)3634": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "be7e56835fddf39da38643b5f9f19a7c1e37d49e53afea3ce4945c194ce4cfa3",
          "withoutMetadata": "c370ab2527b2875f89b16588900be96e4591cff862f0e6e74f1d58ad25e4f7bc",
          "linkedWithoutMetadata": "c370ab2527b2875f89b16588900be96e4591cff862f0e6e74f1d58ad25e4f7bc"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "()",
          "()",
          "transferSToDEX(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)1564_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)1599_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)1698_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:117"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:135"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(PoolNeedInfo)1739_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:147"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)1564_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)1698_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)1599_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)1564_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)1698_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)1739_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)1599_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "78b6ec2cc33747fd025ccd2f5411c74ab8c566a24c03a96ab3253adb7fb34064",
          "withoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042",
          "linkedWithoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address payable,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)1522",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)3667",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)3667": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)1522": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "0021ae84b48d81af1ad16fafb84258541651a603adf61f07c1d5f435884c7140",
          "withoutMetadata": "41dcd66436014d40b12f7bccb56dd23e20c11e3836446e72d7cfba098ed9a7e0",
          "linkedWithoutMetadata": "41dcd66436014d40b12f7bccb56dd23e20c11e3836446e72d7cfba098ed9a7e0"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:56"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)3568",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)3568": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "5f69e3b32ab829d1c9d256223b57f8066326c9e951455698a30ea1971a3ad2e3",
          "withoutMetadata": "d5ede08ffa0fa83ff57e33b6a85cea3b356ac1293c362e60ca9a17e8428dcae8",
          "linkedWithoutMetadata": "d5ede08ffa0fa83ff57e33b6a85cea3b356ac1293c362e60ca9a17e8428dcae8"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)1529_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)1564_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)1663_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:117"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:135"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(PoolNeedInfo)1704_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:147"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)1529_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)1663_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)1564_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)1529_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)1663_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)1704_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)1564_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "6413e669a1ca9fe0483a27a5854ab36e81a11e531216d31c9e56f5cd43240f94",
          "withoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042",
          "linkedWithoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address payable,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)1487",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)3601",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)3601": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)1487": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "5693e9c2f95a80ea9663ffa1ccf7d1c9333099e3bb7e32168fa365442df91060",
          "withoutMetadata": "0bde9d7cba224a22644edc71cc25bad3eef4dcc561753e917e2d7fd792864738",
          "linkedWithoutMetadata": "0bde9d7cba224a22644edc71cc25bad3eef4dcc561753e917e2d7fd792864738"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:56"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)3462",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)3462": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "c3042c553073626c8f82695641227881702951e53ff666e06e153be7c87875ee",
          "withoutMetadata": "e158a10a39e502fdfbbdb6e276f8e4c7038ff81e51953c0ae5e3953216d10b79",
          "linkedWithoutMetadata": "e158a10a39e502fdfbbdb6e276f8e4c7038ff81e51953c0ae5e3953216d10b79"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "calculateOptimalDeployment(address,uint256)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)1447_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)1482_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)1581_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:117"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:135"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(PoolNeedInfo)1622_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:147"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)1447_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)1581_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)1482_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)1447_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)1581_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)1622_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)1482_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "91911d42b91b0815a6fd8bbdac513378ab73860bcc2b879380b3e3dde8c92eec",
          "withoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042",
          "linkedWithoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address payable,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)1405",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)3495",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)3495": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)1405": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "a15fa7fe3761ade4a3cb45fd3918c6dcc738787912a20e4ca0a470e8007cc234",
          "withoutMetadata": "0bde9d7cba224a22644edc71cc25bad3eef4dcc561753e917e2d7fd792864738",
          "linkedWithoutMetadata": "0bde9d7cba224a22644edc71cc25bad3eef4dcc561753e917e2d7fd792864738"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:56"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)3462",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)3462": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "3d12596c83a96cb96b95d833c754f76b232736822576792e587e34dd591f3f01",
          "withoutMetadata": "c3648cf26f8e984f89e68673362d7e3527fe9904672d50b00cb8fbf62687b7a4",
          "linkedWithoutMetadata": "c3648cf26f8e984f89e68673362d7e3527fe9904672d50b00cb8fbf62687b7a4"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "calculateOptimalDeployment(address,uint256)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)1447_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)1482_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)1581_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:117"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:135"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(PoolNeedInfo)1622_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:147"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)1447_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)1581_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)1482_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)1447_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)1581_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)1622_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)1482_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "fa0be17b291a70d852b73ee0ff4f7b3f2c326fb17432b4e54545200b6eac8737",
          "withoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042",
          "linkedWithoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address payable,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)1405",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)3495",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)3495": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)1405": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "7c72ff307c3d10fbfa36f57fd3dc6dfda332ada7bf465f70093fed153b40c6a2",
          "withoutMetadata": "0bde9d7cba224a22644edc71cc25bad3eef4dcc561753e917e2d7fd792864738",
          "linkedWithoutMetadata": "0bde9d7cba224a22644edc71cc25bad3eef4dcc561753e917e2d7fd792864738"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:56"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)3454",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)3454": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "bcef567e6d79798b8b443845257b5dd701c2c65ba296e68dd28e4df015af0df0",
          "withoutMetadata": "534ffba8a349a53b1cfd6aad49804611ec30208ac952479556d12452b76ae7e3",
          "linkedWithoutMetadata": "534ffba8a349a53b1cfd6aad49804611ec30208ac952479556d12452b76ae7e3"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "calculateOptimalDeployment(address,uint256)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)1447_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)1482_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)1581_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:117"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:135"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(PoolNeedInfo)1622_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:147"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)1447_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)1581_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)1482_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)1447_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)1581_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)1622_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)1482_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "8a026cee4f5b14759b8f5c346c2237aa4324b54ac6dc900edc88b4d227ecf771",
          "withoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042",
          "linkedWithoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address payable,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)1405",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)3487",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)3487": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)1405": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "07d55a29cb13df57c7b85e6d0b9f688b7a57464c4c5081414008c0c17868ee73",
          "withoutMetadata": "1a3c6e589f72d95fc996d357b41434a39a47633b9da70349f2ba0ca32017ed5f",
          "linkedWithoutMetadata": "1a3c6e589f72d95fc996d357b41434a39a47633b9da70349f2ba0ca32017ed5f"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()",
          "()",
          "updateSwapFee(uint256)",
          "updateLiquidityManager(address payable)",
          "updateAutoRedeployThreshold(uint256)",
          "getFeeRate()",
          "pause()",
          "unpause()",
          "emergencyWithdraw(address,uint256,address payable)",
          "getPauseStatus()",
          "activatePool(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:120"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "AUTO_REDEPLOY_THRESHOLD",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:15"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)4462",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:16"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:20"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:25"
            },
            {
              "label": "AUTO_REDEPLOY_THRESHOLD",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:30"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:34"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:85"
            },
            {
              "label": "lastPauseTimestamp",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:86"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SaraLiquidityManager)4462": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:9",
        "version": {
          "withMetadata": "05330fd1ba2d5fbc5a46480dff97ccc7bc70731a224b327278e9b4eb4bd95c2a",
          "withoutMetadata": "05330fd1ba2d5fbc5a46480dff97ccc7bc70731a224b327278e9b4eb4bd95c2a",
          "linkedWithoutMetadata": "05330fd1ba2d5fbc5a46480dff97ccc7bc70731a224b327278e9b4eb4bd95c2a"
        },
        "inherit": [
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "calculateOptimalDeployment(address,uint256)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "grantDEXRole(address)",
          "revokeDEXRole(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:158"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:14"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:16"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:19"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)2380_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:29"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)2415_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:54"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:76"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(PoolActivity)2514_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:118"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:136"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "13",
              "type": "t_struct(PoolNeedInfo)2555_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:148"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)2380_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)2514_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)2415_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)2380_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)2514_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)2555_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)2415_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "b263d5cd2d3820afd6e21d3fb7f0f84cc8d8012c7b6a527e74cf54a0759d3aa6",
          "withoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042",
          "linkedWithoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address payable,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)2335",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)4495",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)4495": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)2335": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "f30b7f7b548207a10570b4d43d3eb20f991fdad6ee726a863b8c962b3c6b7f88",
          "withoutMetadata": "00aea5e9fc4c1ebf939b51377c15292a9885585cc0314db028e46d096e0584f6",
          "linkedWithoutMetadata": "00aea5e9fc4c1ebf939b51377c15292a9885585cc0314db028e46d096e0584f6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()",
          "()",
          "updateSwapFee(uint256)",
          "updateLiquidityManager(address payable)",
          "updateAutoRedeployThreshold(uint256)",
          "getFeeRate()",
          "pause()",
          "unpause()",
          "emergencyWithdraw(address,uint256,address payable)",
          "getPauseStatus()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:117"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "AUTO_REDEPLOY_THRESHOLD",
            "src": "contracts/SaraDEX.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)4413",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "AUTO_REDEPLOY_THRESHOLD",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:27"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:82"
            },
            {
              "label": "lastPauseTimestamp",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:83"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SaraLiquidityManager)4413": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:9",
        "version": {
          "withMetadata": "d5b9e3f1e8cddba9c40d0f54c4dd2230be7549faf1a88b47aafa0669c23f026c",
          "withoutMetadata": "d5b9e3f1e8cddba9c40d0f54c4dd2230be7549faf1a88b47aafa0669c23f026c",
          "linkedWithoutMetadata": "d5b9e3f1e8cddba9c40d0f54c4dd2230be7549faf1a88b47aafa0669c23f026c"
        },
        "inherit": [
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "calculateOptimalDeployment(address,uint256)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "grantDEXRole(address)",
          "revokeDEXRole(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:158"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:14"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:16"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:19"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)2347_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:29"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)2382_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:54"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:76"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(PoolActivity)2481_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:118"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:136"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "13",
              "type": "t_struct(PoolNeedInfo)2522_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:148"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)2347_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)2481_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)2382_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)2347_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)2481_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)2522_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)2382_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "3751106ec2494227af42668a1ef4a3bc41526f14bec332ad28f65876aa2fed17",
          "withoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042",
          "linkedWithoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address payable,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)2302",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)4446",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)4446": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)2302": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "67c72a8246343099c66817010f61f2c4f949bf844e2cd65f09ba67d98f127f57",
          "withoutMetadata": "00aea5e9fc4c1ebf939b51377c15292a9885585cc0314db028e46d096e0584f6",
          "linkedWithoutMetadata": "00aea5e9fc4c1ebf939b51377c15292a9885585cc0314db028e46d096e0584f6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()",
          "()",
          "updateSwapFee(uint256)",
          "updateLiquidityManager(address payable)",
          "updateAutoRedeployThreshold(uint256)",
          "getFeeRate()",
          "pause()",
          "unpause()",
          "emergencyWithdraw(address,uint256,address payable)",
          "getPauseStatus()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:117"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "AUTO_REDEPLOY_THRESHOLD",
            "src": "contracts/SaraDEX.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)4393",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "AUTO_REDEPLOY_THRESHOLD",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:27"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:82"
            },
            {
              "label": "lastPauseTimestamp",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:83"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SaraLiquidityManager)4393": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:9",
        "version": {
          "withMetadata": "c11323ed121ac8ab31f3070157aa13ab35fdf2cd6f229b3d6a02f3579cb24f85",
          "withoutMetadata": "c11323ed121ac8ab31f3070157aa13ab35fdf2cd6f229b3d6a02f3579cb24f85",
          "linkedWithoutMetadata": "c11323ed121ac8ab31f3070157aa13ab35fdf2cd6f229b3d6a02f3579cb24f85"
        },
        "inherit": [
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "calculateOptimalDeployment(address,uint256)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "grantDEXRole(address)",
          "revokeDEXRole(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:158"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:14"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:16"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:19"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)2347_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:29"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)2382_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:54"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:76"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(PoolActivity)2481_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:118"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:136"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "13",
              "type": "t_struct(PoolNeedInfo)2522_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:148"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)2347_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)2481_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)2382_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)2347_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)2481_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)2522_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)2382_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "7006a0fce96cb16c48fcc06ccfd22bdff2af5053be75e8c7a43cbe64b1bcd953",
          "withoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042",
          "linkedWithoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address payable,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)2302",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)4426",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)4426": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)2302": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "627d3ed6279a6f82c3442854a477ac97d75aa4f87ae5224cf558d336452f22cc",
          "withoutMetadata": "00aea5e9fc4c1ebf939b51377c15292a9885585cc0314db028e46d096e0584f6",
          "linkedWithoutMetadata": "00aea5e9fc4c1ebf939b51377c15292a9885585cc0314db028e46d096e0584f6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()",
          "()",
          "updateSwapFee(uint256)",
          "updateLiquidityManager(address payable)",
          "updateAutoRedeployThreshold(uint256)",
          "getFeeRate()",
          "pause()",
          "unpause()",
          "emergencyWithdraw(address,uint256,address payable)",
          "getPauseStatus()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:117"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "AUTO_REDEPLOY_THRESHOLD",
            "src": "contracts/SaraDEX.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)4393",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "AUTO_REDEPLOY_THRESHOLD",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:27"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:82"
            },
            {
              "label": "lastPauseTimestamp",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:83"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SaraLiquidityManager)4393": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:9",
        "version": {
          "withMetadata": "393b13d5d1d77fbb6fc0c95cbcedad0eb85d31c78d4f98186e02e80781839e26",
          "withoutMetadata": "393b13d5d1d77fbb6fc0c95cbcedad0eb85d31c78d4f98186e02e80781839e26",
          "linkedWithoutMetadata": "393b13d5d1d77fbb6fc0c95cbcedad0eb85d31c78d4f98186e02e80781839e26"
        },
        "inherit": [
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "calculateOptimalDeployment(address,uint256)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "grantDEXRole(address)",
          "revokeDEXRole(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:158"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:14"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:16"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:19"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)2347_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:29"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)2382_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:54"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:76"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(PoolActivity)2481_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:118"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:136"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "13",
              "type": "t_struct(PoolNeedInfo)2522_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:148"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)2347_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)2481_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)2382_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)2347_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)2481_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)2522_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)2382_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "1b53993a133bb92574611539b9807900861264fa05f51ec8f22d916af3d370d3",
          "withoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042",
          "linkedWithoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address payable,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)2302",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)4426",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)4426": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)2302": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "0a12cdc83f0d5da69c7e2557bd7e1109e0c8eab2daef29b114e69b16fda055c3",
          "withoutMetadata": "00aea5e9fc4c1ebf939b51377c15292a9885585cc0314db028e46d096e0584f6",
          "linkedWithoutMetadata": "00aea5e9fc4c1ebf939b51377c15292a9885585cc0314db028e46d096e0584f6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()",
          "()",
          "updateSwapFee(uint256)",
          "updateLiquidityManager(address payable)",
          "updateAutoRedeployThreshold(uint256)",
          "getFeeRate()",
          "pause()",
          "unpause()",
          "emergencyWithdraw(address,uint256,address payable)",
          "getPauseStatus()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:117"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "AUTO_REDEPLOY_THRESHOLD",
            "src": "contracts/SaraDEX.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)3948",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "AUTO_REDEPLOY_THRESHOLD",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:27"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:82"
            },
            {
              "label": "lastPauseTimestamp",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:83"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(SaraLiquidityManager)3948": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "e049eef5af88dedb6e18b1d514da30721d23d29ac1c05e3392fc1c4cb035a8c8",
          "withoutMetadata": "534ffba8a349a53b1cfd6aad49804611ec30208ac952479556d12452b76ae7e3",
          "linkedWithoutMetadata": "534ffba8a349a53b1cfd6aad49804611ec30208ac952479556d12452b76ae7e3"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "calculateOptimalDeployment(address,uint256)",
          "autoRedeployFees(address)",
          "forcePoolNeedUpdate()",
          "getPoolNeedInfo()",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:157"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)1941_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)1976_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)2075_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:117"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:135"
            },
            {
              "label": "mostNeededPool",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(PoolNeedInfo)2116_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:147"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)1941_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)2075_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)1976_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)1941_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)2075_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PoolNeedInfo)2116_storage": {
              "label": "struct SaraLiquidityManager.PoolNeedInfo",
              "members": [
                {
                  "label": "pool",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "score",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)1976_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "9c9e5cf4713cd8a354b0ba5bea8c44bf82d7ebe42ee55663cba6c88e8479d4c9",
          "withoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042",
          "linkedWithoutMetadata": "268456f830a9aaf9845e3bdab01c4316619d54fcd5ddb6fdcbc272f8775ce042"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address payable,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)1899",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)3981",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)3981": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)1899": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "3a520b78ea9b4d11a8ce95d20d96f5a3f8fea4d7e4cb524c0feef6c94a03ac9a",
          "withoutMetadata": "bef1ccf2e001fadfe28f4cb6d9422874f37925b1507989b21b96659153bc330c",
          "linkedWithoutMetadata": "bef1ccf2e001fadfe28f4cb6d9422874f37925b1507989b21b96659153bc330c"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:56"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)3429",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)3429": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "2c2d10aaf445ecbe35809e456235c1aaa4cd2c52fdf37d169b1ad10e6256f8a9",
          "withoutMetadata": "fea386356c8494be7679b5885c0a953fe443600d80fac2f1191f0deccbb7200a",
          "linkedWithoutMetadata": "fea386356c8494be7679b5885c0a953fe443600d80fac2f1191f0deccbb7200a"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "calculateOptimalDeployment(address,uint256)",
          "autoRedeployFees(address)",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)1562_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)1597_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)1696_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:117"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:135"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)1562_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)1696_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)1597_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)1562_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)1696_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)1597_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "d9c6d389ac624566648607b170a0a1ee5e5b5182693a791269c821d0e11e0d2f",
          "withoutMetadata": "e9aff1749558cfa24b04847f1672cbe7e295ae09b76f7cd39420de6e90b6e49f",
          "linkedWithoutMetadata": "e9aff1749558cfa24b04847f1672cbe7e295ae09b76f7cd39420de6e90b6e49f"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address payable,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "revokeApproval(address)",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)1520",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)3462",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)3462": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)1520": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "cf2c06c79e9b1678b54226ba9cb35b1d0299e778351999ab278286232a04b2eb",
          "withoutMetadata": "7b8cc8abc190cf5adbad258c39a96bdc721420507187ee4b870ed14676ce5ba9",
          "linkedWithoutMetadata": "7b8cc8abc190cf5adbad258c39a96bdc721420507187ee4b870ed14676ce5ba9"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address payable)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:56"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)3424",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)3424": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "507e83ccf4df4eabfbd4da03d0d2a1c4ecb949772641f3b04a3345dbe471d35f",
          "withoutMetadata": "fea386356c8494be7679b5885c0a953fe443600d80fac2f1191f0deccbb7200a",
          "linkedWithoutMetadata": "fea386356c8494be7679b5885c0a953fe443600d80fac2f1191f0deccbb7200a"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "calculateOptimalDeployment(address,uint256)",
          "autoRedeployFees(address)",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)1562_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)1597_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)1696_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:117"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:135"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)1562_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)1696_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)1597_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)1562_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)1696_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)1597_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "a34b39df6a2066bc7372c04bd617052e7ecf760bb7e26c4711f710c1764798b8",
          "withoutMetadata": "eb5ddeed0b34c45dd9c0347ce6ccc66c257075dae4334f8efec617cd20766e77",
          "linkedWithoutMetadata": "eb5ddeed0b34c45dd9c0347ce6ccc66c257075dae4334f8efec617cd20766e77"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address payable,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "revokeApproval()",
          "getApprovalStatus()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)1520",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)3457",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)3457": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)1520": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "b02875760a49e72fc15a8e1550286af5c183bdb6a0a98f646519a4fc4a20d979",
          "withoutMetadata": "e6ae0a6259f02a7cbe266e79faf00e564c33f204ccb6dee90cc16f4b3e19c5dc",
          "linkedWithoutMetadata": "e6ae0a6259f02a7cbe266e79faf00e564c33f204ccb6dee90cc16f4b3e19c5dc"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:56"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)3436",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)3436": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "65396d5d5f12ab85fdca2e4b4a4d067d9c566859be7bbfeb32e198d7179ea2a8",
          "withoutMetadata": "d0faf5846c5d9bd4586e78a6a60637d4bc9e9152c50fa89119cc3973a9c29255",
          "linkedWithoutMetadata": "d0faf5846c5d9bd4586e78a6a60637d4bc9e9152c50fa89119cc3973a9c29255"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "calculateOptimalDeployment(address,uint256)",
          "autoRedeployFees(address)",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)1535_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)1570_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)1669_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:117"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:135"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)1535_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)1669_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)1570_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)1535_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)1669_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)1570_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "c742aab70a27f098e354c876a409c0ba411275486952dcabcf12af3bdb34b541",
          "withoutMetadata": "ae341fbeaad116c462ee3edd5d2d4cc3bf28ded770d5e8a67ff59d2fd4a011b1",
          "linkedWithoutMetadata": "ae341fbeaad116c462ee3edd5d2d4cc3bf28ded770d5e8a67ff59d2fd4a011b1"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "revokeApproval()",
          "getApprovalStatus()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)1493",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)3469",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)3469": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)1493": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "3df854534ae6c86b9d81a9ce68bec52eddc41b7a8f5bae46fcb0f6a970337496",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraDEX.sol:SaraDEX": {
        "src": "contracts/SaraDEX.sol:9",
        "version": {
          "withMetadata": "3fb44fd8990657937d0b6e564f4708ff573c2f64f905f9d1912c55832be72c16",
          "withoutMetadata": "c1212053381774eebd44915c296542e3e6bf96cc27341f84f25890f2283c5641",
          "linkedWithoutMetadata": "c1212053381774eebd44915c296542e3e6bf96cc27341f84f25890f2283c5641"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address)",
          "swapCreatorTokenForS(address,uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "withdrawStoredFees(address,uint256)",
          "updateMaxSlippage(uint256)",
          "validateSlippage(uint256)",
          "getSlippageSettings()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraDEX",
            "src": "contracts/SaraDEX.sol:56"
          },
          {
            "kind": "state-variable-assignment",
            "name": "swapFee",
            "src": "contracts/SaraDEX.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "DEFAULT_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ABSOLUTE_MAX_SLIPPAGE",
            "src": "contracts/SaraDEX.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:12"
            },
            {
              "label": "liquidityManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(SaraLiquidityManager)3306",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:13"
            },
            {
              "label": "swapFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:14"
            },
            {
              "label": "lastSwapTimestamp",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:17"
            },
            {
              "label": "storedFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:22"
            },
            {
              "label": "ABSOLUTE_MAX_SLIPPAGE",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraDEX",
              "src": "contracts/SaraDEX.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SaraLiquidityManager)3306": {
              "label": "contract SaraLiquidityManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraLiquidityManager.sol:SaraLiquidityManager": {
        "src": "contracts/SaraLiquidityManager.sol:8",
        "version": {
          "withMetadata": "993339d6db7a03b6f5a9e0db6c2a711cb4643a990cb2d668f036a6063d5eed5c",
          "withoutMetadata": "a48e33c72e7bdd71657148fe24bbfd085cd267ba4b9deff175d540120aa5fd0b",
          "linkedWithoutMetadata": "a48e33c72e7bdd71657148fe24bbfd085cd267ba4b9deff175d540120aa5fd0b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "addLiquidity(address,uint256,uint256)",
          "removeLiquidity(address,uint256,uint256)",
          "collectFees(address,uint256)",
          "getReserves(address)",
          "withdrawFees(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "getSmoothedMetrics(address)",
          "checkAndRebalance(address)",
          "redeployFees(address,address)",
          "calculateOptimalDeployment(address,uint256)",
          "autoRedeployFees(address)",
          "removePoolFromTracking(address)",
          "getTrackedPools()",
          "startPriceDiscovery(address,uint256)",
          "recordEngagementSnapshot(address,uint256)",
          "completePriceDiscovery(address)",
          "updatePoolActivity(address,uint256)",
          "isPoolActive(address)",
          "getPoolActivity(address)",
          "setDEX(address)",
          "calculateInitialLiquidity(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraLiquidityManager",
            "src": "contracts/SaraLiquidityManager.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "creatorTokenReserves",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:11"
            },
            {
              "label": "sonicReserves",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:12"
            },
            {
              "label": "collectedFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:13"
            },
            {
              "label": "sonicToken",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:15"
            },
            {
              "label": "lastRebalanceTimestamp",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:18"
            },
            {
              "label": "tokenEngagement",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(EngagementMetrics)1447_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:28"
            },
            {
              "label": "priceDiscovery",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(PriceDiscoveryData)1482_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:53"
            },
            {
              "label": "trackedPools",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:74"
            },
            {
              "label": "isTrackedPool",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:75"
            },
            {
              "label": "poolActivity",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(PoolActivity)1581_storage)",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:117"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "SaraLiquidityManager",
              "src": "contracts/SaraLiquidityManager.sol:135"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(EngagementMetrics)1447_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.EngagementMetrics)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PoolActivity)1581_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PoolActivity)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PriceDiscoveryData)1482_storage)": {
              "label": "mapping(address => struct SaraLiquidityManager.PriceDiscoveryData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(EngagementMetrics)1447_storage": {
              "label": "struct SaraLiquidityManager.EngagementMetrics",
              "members": [
                {
                  "label": "lastSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "smoothedSubscriberCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updateCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PoolActivity)1581_storage": {
              "label": "struct SaraLiquidityManager.PoolActivity",
              "members": [
                {
                  "label": "lastTradeTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradingVolume24h",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastVolumeUpdateTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PriceDiscoveryData)1482_storage": {
              "label": "struct SaraLiquidityManager.PriceDiscoveryData",
              "members": [
                {
                  "label": "initialSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "currentSubscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "observationStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isInDiscovery",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "engagementSnapshots",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:ICreatorCoin": {
        "src": "contracts/SaraTokenRouter.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/SaraTokenRouter.sol:SaraTokenRouter": {
        "src": "contracts/SaraTokenRouter.sol:17",
        "version": {
          "withMetadata": "830a8f31620ff15b06475db1a512409d443bfd9789cae1fa3b21fb7e490ce376",
          "withoutMetadata": "0aefdc0a9b79b9a3a3f54d2d951a24a4bc93efc4c5acf8396eb39fe33d0a43f7",
          "linkedWithoutMetadata": "0aefdc0a9b79b9a3a3f54d2d951a24a4bc93efc4c5acf8396eb39fe33d0a43f7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address)",
          "listNewCreatorToken(address)",
          "updateAIRebalance(address,uint256)",
          "togglePause()",
          "getPauseState()",
          "onTokenMinted(address,uint256)",
          "updateEngagementMetrics(address,uint256)",
          "completePriceDiscovery(address)",
          "calculateInitialLiquidity(uint256)",
          "revokeApproval()",
          "getApprovalStatus()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SaraTokenRouter",
            "src": "contracts/SaraTokenRouter.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "dex",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SaraDEX)1405",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:20"
            },
            {
              "label": "listedTokens",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:21"
            },
            {
              "label": "creatorTokenFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(ICreatorCoin)3339",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:22"
            },
            {
              "label": "paused",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:23"
            },
            {
              "label": "inPriceDiscovery",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:28"
            },
            {
              "label": "hasOpenApproval",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:35"
            },
            {
              "label": "lastApprovalTimestamp",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:37"
            },
            {
              "label": "lastPauseChange",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SaraTokenRouter",
              "src": "contracts/SaraTokenRouter.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICreatorCoin)3339": {
              "label": "contract ICreatorCoin",
              "numberOfBytes": "20"
            },
            "t_contract(SaraDEX)1405": {
              "label": "contract SaraDEX",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "75c9e2197a757078501be0c06db04e0c632da79e144e120f5850f6d3148d1edd",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:11",
        "version": {
          "withMetadata": "0f5b8fba8681f9c8b0eed6634e41b1bbb61ad39a736e163fac32abbfd82608bc",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin/contracts/utils/Errors.sol:14",
        "version": {
          "withMetadata": "2988d0e7aff52f28a8ccd989d898a5938ca7f222190d190f9df823b0e2b819dd",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "632a6d19ba358003dea6c406891600368fc8db002296dafc361a78e6c52ca9d8",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/CreatorCoin.sol:CreatorERC20": {
        "src": "contracts/CreatorCoin.sol:10",
        "version": {
          "withMetadata": "56350db7c1aa1ba0231fa6d6ad856d801373239a93aed8b5b19397c7f43ab8e0",
          "withoutMetadata": "e9bfc39525d4295fb1837d86733583ac66b96069bfb5a5193ecc6fb8cd462f12",
          "linkedWithoutMetadata": "e9bfc39525d4295fb1837d86733583ac66b96069bfb5a5193ecc6fb8cd462f12"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,string,string,string,uint256,string,uint256,address)",
          "getCreatorMetadata()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CreatorERC20",
            "src": "contracts/CreatorCoin.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "creatorName",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "CreatorERC20",
              "src": "contracts/CreatorCoin.sol:11"
            },
            {
              "label": "imageURL",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "CreatorERC20",
              "src": "contracts/CreatorCoin.sol:12"
            },
            {
              "label": "channelLink",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "CreatorERC20",
              "src": "contracts/CreatorCoin.sol:13"
            },
            {
              "label": "subscribers",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "CreatorERC20",
              "src": "contracts/CreatorCoin.sol:14"
            },
            {
              "label": "milestone",
              "offset": 0,
              "slot": "9",
              "type": "t_string_storage",
              "contract": "CreatorERC20",
              "src": "contracts/CreatorCoin.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/CreatorCoin.sol:CreatorToken": {
        "src": "contracts/CreatorCoin.sol:68",
        "version": {
          "withMetadata": "9be6ce57f7d4920704b2c8078f9aa6bedf8f19309cff9b30796bcb038d7375f8",
          "withoutMetadata": "83ea20134e64f593c4801c5e1bd00bd005d2090f5c67a3df22c9965acf94b894",
          "linkedWithoutMetadata": "83ea20134e64f593c4801c5e1bd00bd005d2090f5c67a3df22c9965acf94b894"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "()",
          "initialize(address)",
          "mintToken(address,string,string,string,uint256)",
          "getCreatorToken(string)",
          "transferOwnership(address)",
          "getImplementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "CreatorToken",
              "src": "contracts/CreatorCoin.sol:69"
            },
            {
              "label": "isTokenMinted",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "contract": "CreatorToken",
              "src": "contracts/CreatorCoin.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "75c9e2197a757078501be0c06db04e0c632da79e144e120f5850f6d3148d1edd",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:11",
        "version": {
          "withMetadata": "0f5b8fba8681f9c8b0eed6634e41b1bbb61ad39a736e163fac32abbfd82608bc",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin/contracts/utils/Errors.sol:14",
        "version": {
          "withMetadata": "2988d0e7aff52f28a8ccd989d898a5938ca7f222190d190f9df823b0e2b819dd",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "632a6d19ba358003dea6c406891600368fc8db002296dafc361a78e6c52ca9d8",
          "withoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a",
          "linkedWithoutMetadata": "e2a89a66865458f0d9fedd4bc7faf0ee62e4c341d176ab79d29bd77a1bdfc32a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/CreatorCoin.sol:CreatorERC20": {
        "src": "contracts/CreatorCoin.sol:9",
        "version": {
          "withMetadata": "ea5db6962210527f9998f6f1770ede2a8c74c98f65d040edb5b996f85dca0bc9",
          "withoutMetadata": "7820a33c0f66fe901b304d13e7598a1bf16ca7dc6003c26ba267bc8fbaa1a534",
          "linkedWithoutMetadata": "7820a33c0f66fe901b304d13e7598a1bf16ca7dc6003c26ba267bc8fbaa1a534"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,string,string,string,uint256,string,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CreatorERC20",
            "src": "contracts/CreatorCoin.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "creatorName",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "CreatorERC20",
              "src": "contracts/CreatorCoin.sol:10"
            },
            {
              "label": "imageURL",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "CreatorERC20",
              "src": "contracts/CreatorCoin.sol:11"
            },
            {
              "label": "channelLink",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "CreatorERC20",
              "src": "contracts/CreatorCoin.sol:12"
            },
            {
              "label": "subscribers",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "CreatorERC20",
              "src": "contracts/CreatorCoin.sol:13"
            },
            {
              "label": "milestone",
              "offset": 0,
              "slot": "9",
              "type": "t_string_storage",
              "contract": "CreatorERC20",
              "src": "contracts/CreatorCoin.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/CreatorCoin.sol:CreatorToken": {
        "src": "contracts/CreatorCoin.sol:37",
        "version": {
          "withMetadata": "a9f284c1df246eeef5ab3867e947367ea13af595d4ed009ca5113ba02d9dc947",
          "withoutMetadata": "766e7cb6ad67c87989dbeca040e35f9a45b9c4cd59644fc0e7fbb14e1f53f1fe",
          "linkedWithoutMetadata": "766e7cb6ad67c87989dbeca040e35f9a45b9c4cd59644fc0e7fbb14e1f53f1fe"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address)",
          "mintToken(address,string,string,string,uint256)",
          "getCreatorToken(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "CreatorToken",
              "src": "contracts/CreatorCoin.sol:38"
            },
            {
              "label": "isTokenMinted",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "contract": "CreatorToken",
              "src": "contracts/CreatorCoin.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:30",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)217_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "6ec587011e7da2ac5cc173d0abb114be08e46a964fcc5723aeb9cb441910e89b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:11",
        "version": {
          "withMetadata": "ac3c0d10555907a4f418fe1763807994ca17f0be7f94f3fb10a28a5c38adc98c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin/contracts/utils/Errors.sol:14",
        "version": {
          "withMetadata": "01c91d81bdd01efd27805ff310be9662d5ceeb231e4cad5c13161b93ee78eb4c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "b1705ccc98c32f3b271a6980ce6c5c3567f3c15db72d15c61e259da321a7e2b0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/CreatorCoin.sol:CreatorToken": {
        "src": "contracts/CreatorCoin.sol:8",
        "version": {
          "withMetadata": "41fcad0c1ed8e52e620e2f0173a3957305d6dedca0009e3be7878171fb316bbe",
          "withoutMetadata": "d2e3ad9dbab8cb102d7b0a0dd09cd82297eb2b7f545ac962724580dfc4664899",
          "linkedWithoutMetadata": "d2e3ad9dbab8cb102d7b0a0dd09cd82297eb2b7f545ac962724580dfc4664899"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address)",
          "mintToken(address,string,string,string,uint256)",
          "transfer(address,uint256)",
          "getCreatorDetails(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "creatorInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(CreatorDetails)2297_storage)",
              "contract": "CreatorToken",
              "src": "contracts/CreatorCoin.sol:18"
            },
            {
              "label": "isTokenMinted",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "contract": "CreatorToken",
              "src": "contracts/CreatorCoin.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)217_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_mapping(t_address,t_struct(CreatorDetails)2297_storage)": {
              "label": "mapping(address => struct CreatorToken.CreatorDetails)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CreatorDetails)2297_storage": {
              "label": "struct CreatorToken.CreatorDetails",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "image",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "channelLink",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "subscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "milestone",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:30",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)217_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "6ec587011e7da2ac5cc173d0abb114be08e46a964fcc5723aeb9cb441910e89b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:11",
        "version": {
          "withMetadata": "ac3c0d10555907a4f418fe1763807994ca17f0be7f94f3fb10a28a5c38adc98c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin/contracts/utils/Errors.sol:14",
        "version": {
          "withMetadata": "01c91d81bdd01efd27805ff310be9662d5ceeb231e4cad5c13161b93ee78eb4c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "b1705ccc98c32f3b271a6980ce6c5c3567f3c15db72d15c61e259da321a7e2b0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/CreatorCoin.sol:CreatorToken": {
        "src": "contracts/CreatorCoin.sol:8",
        "version": {
          "withMetadata": "5df94f5b9b45a8bdd746ab411f95a0afa2b7be2a50d534c4ce84e31338356d77",
          "withoutMetadata": "676d430aa91a3b1275f2011bbd5451688a8443354aa521c7547cec6cb4418f0d",
          "linkedWithoutMetadata": "676d430aa91a3b1275f2011bbd5451688a8443354aa521c7547cec6cb4418f0d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address)",
          "mintToken(address,string,string,string,uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "creatorInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(CreatorDetails)2297_storage)",
              "contract": "CreatorToken",
              "src": "contracts/CreatorCoin.sol:18"
            },
            {
              "label": "isTokenMinted",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "contract": "CreatorToken",
              "src": "contracts/CreatorCoin.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20Storage)217_storage": {
              "label": "struct ERC20Upgradeable.ERC20Storage",
              "members": [
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_allowances",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_totalSupply",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_mapping(t_address,t_struct(CreatorDetails)2297_storage)": {
              "label": "mapping(address => struct CreatorToken.CreatorDetails)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CreatorDetails)2297_storage": {
              "label": "struct CreatorToken.CreatorDetails",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "image",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "channelLink",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "subscribers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "milestone",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC20": [
              {
                "contract": "ERC20Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_totalSupply",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC20Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
                "offset": 0,
                "slot": "4"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.28"
      }
    }
  ]
}